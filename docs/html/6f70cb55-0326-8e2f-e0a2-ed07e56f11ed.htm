<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Matrix&lt;D&gt; Operators and Type Conversions</title><meta name="Title" content="Operators" /><meta name="Help.Id" content="Operators.T:RanSharp.Maths.Matrix`1" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="RanSharp.Maths" /><meta name="guid" content="6f70cb55-0326-8e2f-e0a2-ed07e56f11ed" /><meta name="tocFile" content="../toc/IDGAC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/RanSharp.ico" /></div><div id="DocumentationTitle" class="level-item">RanSharp Help Doc</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Matrix<span id="LSTA4B8609D_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">D</span><span id="LSTA4B8609D_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span> Operators and Type Conversions</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Operators</h2><div id="IDBEASection"><table id="OperatorList" class="table is-hoverable"><tr><td><a href="b095fb3b-8ecf-1b1f-c7c6-f691a9a975b7.htm">Addition(D, Matrix<span id="LSTA4B8609D_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise addition of scalar val and mat
            </td></tr><tr><td><a href="30ec556b-8418-cf7c-2b40-7f32c248c0f7.htm">Addition(Matrix<span id="LSTA4B8609D_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, D)</a></td><td>
            Elementwise addition of mat and scalar val
            </td></tr><tr><td><a href="f4075bfd-7eeb-c386-0a37-f330c5e6806f.htm">Addition(Matrix<span id="LSTA4B8609D_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Matrix<span id="LSTA4B8609D_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise addition of mat1 and mat2
            </td></tr><tr><td><a href="f765a117-8926-09fa-98f0-2b2ce515cedd.htm">Decrement(Matrix<span id="LSTA4B8609D_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise decrement of mat
            </td></tr><tr><td><a href="3249458c-1a3f-0d8a-874a-79648625f2b0.htm">Division(D, Matrix<span id="LSTA4B8609D_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise division of scalar val and mat
            </td></tr><tr><td><a href="b08dba92-0cfc-a791-4b5b-37dc1e65ef3d.htm">Division(Matrix<span id="LSTA4B8609D_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, D)</a></td><td>
            Elementwise division of mat and scalar val
            </td></tr><tr><td><a href="14ed15d1-2237-3dd1-9747-fec932db0eb0.htm">Division(Matrix<span id="LSTA4B8609D_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Matrix<span id="LSTA4B8609D_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Matrix division mat / mat2 = mat * mat2.Inv()
            </td></tr><tr><td><a href="fbfb8708-7978-1eda-cd8d-c4dee96809cc.htm">Equality(Matrix<span id="LSTA4B8609D_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Matrix<span id="LSTA4B8609D_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns thue if mat1 and mat2 are equal
            </td></tr><tr><td><a href="8efdd766-91ff-fa97-25be-ce1d47a9ebb5.htm"><span id="LSTA4B8609D_24" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(FastList<span id="LSTA4B8609D_25" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span><span id="LSTA4B8609D_26" data-languageSpecificText="cpp=array&lt;"></span>D<span id="LSTA4B8609D_27" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTA4B8609D_28" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span> to Matrix<span id="LSTA4B8609D_29" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_30" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Implicit conversion from <a href="862f3ba7-6da9-d4d1-3a2b-8f21e49f3199.htm">FastList<span id="LSTA4B8609D_31" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTA4B8609D_32" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>[] to <a href="7ff22235-a053-3e62-bb87-e66f0358dbbe.htm">Matrix<span id="LSTA4B8609D_33" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>D<span id="LSTA4B8609D_34" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td></tr><tr><td><a href="7f50d278-19ee-8ee5-cb5e-b3cd79af081e.htm"><span id="LSTA4B8609D_35" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(FastList<span id="LSTA4B8609D_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArrVector<span id="LSTA4B8609D_37" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_38" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTA4B8609D_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span> to Matrix<span id="LSTA4B8609D_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Implicit conversion from <a href="862f3ba7-6da9-d4d1-3a2b-8f21e49f3199.htm">FastList<span id="LSTA4B8609D_42" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTA4B8609D_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> of <a href="1d96a8f1-ca7b-628d-4c6f-afde5194b077.htm">ArrVector<span id="LSTA4B8609D_44" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTA4B8609D_45" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> to <a href="7ff22235-a053-3e62-bb87-e66f0358dbbe.htm">Matrix<span id="LSTA4B8609D_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>D<span id="LSTA4B8609D_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td></tr><tr><td><a href="653bb06f-8f44-6f78-0a10-c683b8adde57.htm"><span id="LSTA4B8609D_48" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(<span id="LSTA4B8609D_49" data-languageSpecificText="cpp=array&lt;"></span><span id="LSTA4B8609D_50" data-languageSpecificText="cpp=array&lt;"></span>D<span id="LSTA4B8609D_51" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTA4B8609D_52" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span> to Matrix<span id="LSTA4B8609D_53" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_54" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Implicit conversion from <span class="parameter">D</span>[][] to <a href="7ff22235-a053-3e62-bb87-e66f0358dbbe.htm">Matrix<span id="LSTA4B8609D_55" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>D<span id="LSTA4B8609D_56" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td></tr><tr><td><a href="5f67077b-1fc5-3e96-433b-ef5ea456191d.htm"><span id="LSTA4B8609D_57" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Matrix<span id="LSTA4B8609D_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span> to <span id="LSTA4B8609D_60" data-languageSpecificText="cpp=array&lt;"></span><span id="LSTA4B8609D_61" data-languageSpecificText="cpp=array&lt;"></span>D<span id="LSTA4B8609D_62" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTA4B8609D_63" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Implicit conversion from <a href="7ff22235-a053-3e62-bb87-e66f0358dbbe.htm">Matrix<span id="LSTA4B8609D_64" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>D<span id="LSTA4B8609D_65" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> to <span class="parameter">D</span>[][]</td></tr><tr><td><a href="da915ddd-6ebb-c634-f34a-856e01e482f2.htm"><span id="LSTA4B8609D_66" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Matrix<span id="LSTA4B8609D_67" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_68" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span> to FastList<span id="LSTA4B8609D_69" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span><span id="LSTA4B8609D_70" data-languageSpecificText="cpp=array&lt;"></span>D<span id="LSTA4B8609D_71" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTA4B8609D_72" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Implicit conversion from <a href="7ff22235-a053-3e62-bb87-e66f0358dbbe.htm">Matrix<span id="LSTA4B8609D_73" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>D<span id="LSTA4B8609D_74" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> to <a href="862f3ba7-6da9-d4d1-3a2b-8f21e49f3199.htm">FastList<span id="LSTA4B8609D_75" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTA4B8609D_76" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> of <span class="parameter">D</span>[]</td></tr><tr><td><a href="da8dc0c8-8223-b41f-c5b9-eaf28263a284.htm"><span id="LSTA4B8609D_77" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Matrix<span id="LSTA4B8609D_78" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_79" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span> to FastList<span id="LSTA4B8609D_80" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArrVector<span id="LSTA4B8609D_81" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_82" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTA4B8609D_83" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Implicit conversion from <a href="7ff22235-a053-3e62-bb87-e66f0358dbbe.htm">Matrix<span id="LSTA4B8609D_84" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>D<span id="LSTA4B8609D_85" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> to <a href="862f3ba7-6da9-d4d1-3a2b-8f21e49f3199.htm">FastList<span id="LSTA4B8609D_86" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTA4B8609D_87" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> of <a href="1d96a8f1-ca7b-628d-4c6f-afde5194b077.htm">ArrVector<span id="LSTA4B8609D_88" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTA4B8609D_89" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td></tr><tr><td><a href="8e7a466e-abfa-e1b2-311c-967368605b73.htm">Increment(Matrix<span id="LSTA4B8609D_90" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_91" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise increment of mat
            </td></tr><tr><td><a href="f13b7949-dc94-db81-edfe-186d1c22445e.htm">Inequality(Matrix<span id="LSTA4B8609D_92" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_93" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Matrix<span id="LSTA4B8609D_94" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_95" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns thue if mat1 and mat2 are not equal
            </td></tr><tr><td><a href="003be5cc-80c4-5b69-7c98-46c2a8f176b0.htm">Multiply(ArrVector<span id="LSTA4B8609D_96" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_97" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Matrix<span id="LSTA4B8609D_98" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_99" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Vector and Matrix multiplication v * m
            </td></tr><tr><td><a href="5d8408c2-e5d8-8fe7-b66f-f26c6faecc1f.htm">Multiply(D, Matrix<span id="LSTA4B8609D_100" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_101" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise multiplication of scalar val and mat
            </td></tr><tr><td><a href="e5bc45f6-1fc4-7071-d005-80235e15798c.htm">Multiply(Matrix<span id="LSTA4B8609D_102" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_103" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, D)</a></td><td>
            Elementwise multiplication of mat and scalar val
            </td></tr><tr><td><a href="a130e94d-a11c-5636-e506-66d90601be86.htm">Multiply(Matrix<span id="LSTA4B8609D_104" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_105" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ArrVector<span id="LSTA4B8609D_106" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_107" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Matrix and Vector multiplication m * v
            </td></tr><tr><td><a href="067dff41-647d-b808-83e9-bea777716aa5.htm">Multiply(Matrix<span id="LSTA4B8609D_108" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_109" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Matrix<span id="LSTA4B8609D_110" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_111" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Matrix multiplication mat1 * mat2
            </td></tr><tr><td><a href="2158a804-8e20-c07e-54a6-fde6c603162c.htm">OnesComplement(Matrix<span id="LSTA4B8609D_112" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_113" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Normalized mat
            </td></tr><tr><td><a href="18c26604-1d10-098f-5bcc-cf81e077bf4d.htm">Subtraction(D, Matrix<span id="LSTA4B8609D_114" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_115" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise subtraction of scalar val from mat
            </td></tr><tr><td><a href="6a3f7e11-fe1a-8a84-e27e-e6978684cc73.htm">Subtraction(Matrix<span id="LSTA4B8609D_116" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_117" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, D)</a></td><td>
            Elementwise subtraction of mat and scalar val
            </td></tr><tr><td><a href="80d83087-fde7-617e-ae0f-e57b84f1767f.htm">Subtraction(Matrix<span id="LSTA4B8609D_118" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_119" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Matrix<span id="LSTA4B8609D_120" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_121" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise subtraction of mat1 and mat2
            </td></tr><tr><td><a href="4987929c-7ca9-ff8b-a14f-66eaf8a058cb.htm">UnaryNegation(Matrix<span id="LSTA4B8609D_122" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_123" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Negation of mat
            </td></tr><tr><td><a href="e1d3093d-7110-8bce-bbfd-10901bdc6a45.htm">UnaryPlus(Matrix<span id="LSTA4B8609D_124" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>D<span id="LSTA4B8609D_125" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Absolute value of mat
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="7ff22235-a053-3e62-bb87-e66f0358dbbe.htm">Matrix<span id="LSTA4B8609D_126" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>D<span id="LSTA4B8609D_127" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span> Structure</a></div><div><a href="f6fa4f31-9201-0fec-0b6b-bfa7b3029260.htm">RanSharp.Maths Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Operators</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>